// Generated by view binder compiler. Do not edit!
package com.aquacoders.aquaexplorer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aquacoders.aquaexplorer.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final LinearLayout list1Container;

  @NonNull
  public final LinearLayout list2Container;

  @NonNull
  public final LinearLayout listsContainer;

  @NonNull
  public final NavigationView mainNav;

  @NonNull
  public final RecyclerView recyclerview1;

  @NonNull
  public final RecyclerView recyclerview2;

  @NonNull
  public final MaterialToolbar topAppBar;

  private ActivityMainBinding(@NonNull DrawerLayout rootView, @NonNull LinearLayout list1Container,
      @NonNull LinearLayout list2Container, @NonNull LinearLayout listsContainer,
      @NonNull NavigationView mainNav, @NonNull RecyclerView recyclerview1,
      @NonNull RecyclerView recyclerview2, @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.list1Container = list1Container;
    this.list2Container = list2Container;
    this.listsContainer = listsContainer;
    this.mainNav = mainNav;
    this.recyclerview1 = recyclerview1;
    this.recyclerview2 = recyclerview2;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.list1_container;
      LinearLayout list1Container = ViewBindings.findChildViewById(rootView, id);
      if (list1Container == null) {
        break missingId;
      }

      id = R.id.list2_container;
      LinearLayout list2Container = ViewBindings.findChildViewById(rootView, id);
      if (list2Container == null) {
        break missingId;
      }

      id = R.id.lists_container;
      LinearLayout listsContainer = ViewBindings.findChildViewById(rootView, id);
      if (listsContainer == null) {
        break missingId;
      }

      id = R.id.main_nav;
      NavigationView mainNav = ViewBindings.findChildViewById(rootView, id);
      if (mainNav == null) {
        break missingId;
      }

      id = R.id.recyclerview1;
      RecyclerView recyclerview1 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview1 == null) {
        break missingId;
      }

      id = R.id.recyclerview2;
      RecyclerView recyclerview2 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview2 == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new ActivityMainBinding((DrawerLayout) rootView, list1Container, list2Container,
          listsContainer, mainNav, recyclerview1, recyclerview2, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
